{"ast":null,"code":"var _jsxFileName = \"/Users/user/FinalProject/dive_app_front_end/src/containers/DiveContainer.js\",\n    _s = $RefreshSig$();\n\n// import React, { useEffect, useState, useRef }  from \"react\";\n// import TitleBar from \"../components/TitleBar\";\n// const LogContainer = ({ baseUrl }) => {\n//     const [dives, setDives] = useState([]);\n//     useEffect(() => {\n//       loadDives(`${baseUrl}/dives`);\n//     },[])\n//     const loadDives = url => {\n//       fetch(url)\n//         .then(res => res.json())\n//         .then(divesList => setDives(divesList))\n//         .catch(err => console.error(err));\n//     }\n//     // Map round divesList, create an array of Dive components\n//     const mappedDives = divesList.map(dive => {\n//         return(\n//                     <div>\n//                         <p>{dive.diveNum}</p> \n//                         <p>{dive.place}</p> \n//                     </div>\n//         )\n//     })\n//     return (\n//       <>\n//         {/* Display dive components */\n//         {mappedDives}}\n//       </>\n//     );\n//   }\n//   export default LogContainer;\nimport { useState, useEffect } from 'react';\nimport DiveSelect from '../components/DiveSelect';\nimport Dive from '../components/Dive';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DiveContainer = () => {\n  _s();\n\n  const [dives, setDives] = useState([]);\n  const [selectedDiveId, setSelectedDiveId] = useState('');\n  useEffect(() => {\n    getDives();\n  }, []);\n\n  const getDives = () => {\n    fetch(`${baseUrl}/dives`).then(response => response.json()).then(responseData => setDives(responseData.data.dives));\n  };\n\n  const handleDiveSelected = id => {\n    setSelectedDiveId(id);\n  };\n\n  const selectedDive = dives.find(dive => dive.id === selectedDiveId);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dives\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DiveSelect, {\n      dives: dives,\n      onDiveSelected: handleDiveSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dive, {\n      dive: selectedDive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DiveContainer, \"8uEbmgyzAAtjoa6hJ3xiK+c/gm8=\");\n\n_c = DiveContainer;\nexport default DiveContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DiveContainer\");","map":{"version":3,"sources":["/Users/user/FinalProject/dive_app_front_end/src/containers/DiveContainer.js"],"names":["useState","useEffect","DiveSelect","Dive","DiveContainer","dives","setDives","selectedDiveId","setSelectedDiveId","getDives","fetch","baseUrl","then","response","json","responseData","data","handleDiveSelected","id","selectedDive","find","dive"],"mappings":";;;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAExB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,EAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,QAAQ,GAAG,MAAM;AACnBC,IAAAA,KAAK,CAAE,GAAEC,OAAQ,QAAZ,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,YAAY,IAAIT,QAAQ,CAACS,YAAY,CAACC,IAAb,CAAkBX,KAAnB,CAFlC;AAGH,GAJD;;AAMA,QAAMY,kBAAkB,GAAGC,EAAE,IAAI;AAC7BV,IAAAA,iBAAiB,CAACU,EAAD,CAAjB;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAGd,KAAK,CAACe,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYX,cAA/B,CAArB;AAEA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEF,KAAnB;AAA0B,MAAA,cAAc,EAAEY;AAA1C;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEE;AAAZ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAOH,CA5BD;;GAAMf,a;;KAAAA,a;AA8BN,eAAeA,aAAf","sourcesContent":["// import React, { useEffect, useState, useRef }  from \"react\";\n// import TitleBar from \"../components/TitleBar\";\n\n// const LogContainer = ({ baseUrl }) => {\n//     const [dives, setDives] = useState([]);\n  \n//     useEffect(() => {\n//       loadDives(`${baseUrl}/dives`);\n//     },[])\n  \n//     const loadDives = url => {\n//       fetch(url)\n//         .then(res => res.json())\n//         .then(divesList => setDives(divesList))\n//         .catch(err => console.error(err));\n//     }\n    \n//     // Map round divesList, create an array of Dive components\n//     const mappedDives = divesList.map(dive => {\n//         return(\n//                     <div>\n//                         <p>{dive.diveNum}</p> \n//                         <p>{dive.place}</p> \n//                     </div>\n//         )\n//     })\n\n//     return (\n//       <>\n//         {/* Display dive components */\n//         {mappedDives}}\n//       </>\n//     );\n//   }\n  \n//   export default LogContainer;\n\nimport { useState, useEffect } from 'react'\nimport DiveSelect from '../components/DiveSelect'\nimport Dive from '../components/Dive'\n\nconst DiveContainer = () => {\n\n    const [dives, setDives] = useState([])\n    const [selectedDiveId, setSelectedDiveId] = useState('')\n\n    useEffect(() => {\n        getDives()\n    }, [])\n\n    const getDives = () => {\n        fetch(`${baseUrl}/dives`)\n            .then(response => response.json())\n            .then(responseData => setDives(responseData.data.dives))\n    }\n\n    const handleDiveSelected = id => {\n        setSelectedDiveId(id)\n    }\n\n    const selectedDive = dives.find(dive => dive.id === selectedDiveId)\n\n    return (\n        <>\n            <h2>Dives</h2>\n            <DiveSelect dives={dives} onDiveSelected={handleDiveSelected} />\n            <Dive dive={selectedDive}/>\n        </>\n    )\n}\n\nexport default DiveContainer"]},"metadata":{},"sourceType":"module"}