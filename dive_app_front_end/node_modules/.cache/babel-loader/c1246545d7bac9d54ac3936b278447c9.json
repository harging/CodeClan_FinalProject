{"ast":null,"code":"var _jsxFileName = \"/Users/user/FinalProject/dive_app_front_end/src/containers/DiveContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport DiveSelect from '../components/DiveSelect';\nimport Dive from '../components/Dive';\nimport ProfileGraph from '../components/ProfileGraph';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseUrl = \"http://localhost:8080\";\n\nconst DiveContainer = () => {\n  _s();\n\n  const [dives, setDives] = useState([]);\n  const [selectedDiveId, setSelectedDiveId] = useState('');\n  useEffect(() => {\n    getDives(`${baseUrl}/dives`);\n  }, []);\n  useEffect(() => {\n    getCylinders(`${baseUrl}/cylinders`);\n  }, []);\n\n  const getDives = url => {\n    fetch(url).then(res => res.json()).then(divesList => setDives(divesList)).catch(err => console.error(err));\n  };\n\n  const getCylinders = url => {\n    fetch(url).then(res => res.json()).then(cylindersList => setCylinders(cylindersList)).catch(err => console.error(err));\n  };\n\n  const handleDiveSelected = id => {\n    setSelectedDiveId(id);\n  };\n\n  const selectedDive = dives.find(dive => dive.id === selectedDiveId);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dive, {\n      dive: selectedDive\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DiveSelect, {\n      dives: dives,\n      onDiveSelected: handleDiveSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DiveContainer, \"2vjFK2sLO+naw9GFVkcwGQ4VR70=\");\n\n_c = DiveContainer;\nexport default DiveContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DiveContainer\");","map":{"version":3,"sources":["/Users/user/FinalProject/dive_app_front_end/src/containers/DiveContainer.js"],"names":["useState","useEffect","DiveSelect","Dive","ProfileGraph","baseUrl","DiveContainer","dives","setDives","selectedDiveId","setSelectedDiveId","getDives","getCylinders","url","fetch","then","res","json","divesList","catch","err","console","error","cylindersList","setCylinders","handleDiveSelected","id","selectedDive","find","dive"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;;AAEA,MAAMC,OAAO,GAAG,uBAAhB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAExB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,EAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,QAAQ,CAAE,GAAEN,OAAQ,QAAZ,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAIAJ,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,YAAY,CAAE,GAAEP,OAAQ,YAAZ,CAAZ;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMM,QAAQ,GAAGE,GAAG,IAAI;AACdC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,SAAS,IAAIV,QAAQ,CAACU,SAAD,CAF7B,EAGGC,KAHH,CAGSC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAHhB;AAID,GALT;;AAOA,QAAMR,YAAY,GAAGC,GAAG,IAAI;AACxBC,IAAAA,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUQ,aAAa,IAAIC,YAAY,CAACD,aAAD,CAFvC,EAGKJ,KAHL,CAGWC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAHlB;AAIC,GALL;;AAOA,QAAMK,kBAAkB,GAAGC,EAAE,IAAI;AAC7BhB,IAAAA,iBAAiB,CAACgB,EAAD,CAAjB;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAGpB,KAAK,CAACqB,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYjB,cAA/B,CAArB;AAEA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEkB;AAAZ;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEpB,KAAnB;AAA0B,MAAA,cAAc,EAAEkB;AAA1C;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AAOH,CAxCD;;GAAMnB,a;;KAAAA,a;AA0CN,eAAeA,aAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport DiveSelect from '../components/DiveSelect'\nimport Dive from '../components/Dive'\nimport ProfileGraph from '../components/ProfileGraph'\n\nconst baseUrl = \"http://localhost:8080\"\n\nconst DiveContainer = () => {\n\n    const [dives, setDives] = useState([])\n    const [selectedDiveId, setSelectedDiveId] = useState('')\n\n    useEffect(() => {\n        getDives(`${baseUrl}/dives`)\n    }, [])\n\n    useEffect(() => {\n        getCylinders(`${baseUrl}/cylinders`)\n    }, [])\n    \n    const getDives = url => {\n              fetch(url)\n                .then(res => res.json())\n                .then(divesList => setDives(divesList))\n                .catch(err => console.error(err));\n            }\n\n    const getCylinders = url => {\n        fetch(url)\n            .then(res => res.json())\n            .then(cylindersList => setCylinders(cylindersList))\n            .catch(err => console.error(err));\n        }\n\n    const handleDiveSelected = id => {\n        setSelectedDiveId(id)\n    }\n\n    const selectedDive = dives.find(dive => dive.id === selectedDiveId)\n\n    return (\n        <>\n            <Dive dive={selectedDive}/>\n            {/* <ProfileGraph dive={selectedDive}/> */}\n            <DiveSelect dives={dives} onDiveSelected={handleDiveSelected} />\n        </>\n    )\n}\n\nexport default DiveContainer"]},"metadata":{},"sourceType":"module"}